- youtube fetcher (cron)
- DB view refresh (cron)
- filesystem fullscan (cron) => scan folder recursively => push all files path to scan to queue
- source file changed => restart sanic
- tag edit inside browser => saves changes to music file => (trigger music changed)
- watch music file changed => trigger scan file and push path to queue
- paths in queue must be read => updates DB

RESOURCES:
- DB system on OVH DBaaS (postgres ?)
- queue system QaaS (kafka ?)
- virtual machine provided by OVH PCI (openstack)
- http authentication handled by nginx (manual)
- https handled by OVH IPLB (musicbot.ovh)
- music storage on local, PCS, nasha, ceph

DEPENDENCIES:
- OVH

# AUTOGENERATED FROM 'musicbot/queries/upsert_folder.edgeql' WITH:
#     $ edgedb-py -I musicbot-prod --dir musicbot/queries


from __future__ import annotations

import dataclasses
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema

        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpsertFolderResult(NoPydanticValidation):
    id: uuid.UUID


async def upsert_folder(
    executor: edgedb.AsyncIOExecutor,
    *,
    folder: str,
    username: str,
    ipv4: str,
) -> UpsertFolderResult:
    return await executor.query_single(
        """\
        select (
            insert Folder {
                name := <str>$folder,
                username := <str>$username,
                ipv4 := <str>$ipv4
            }
            unless conflict on (.name, .username, .ipv4) else (select Folder)
        ) {id}\
        """,
        folder=folder,
        username=username,
        ipv4=ipv4,
    )

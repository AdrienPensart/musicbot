#!/usr/bin/env python
# -*- coding: utf-8 -*-

import click
import os
from attrdict import AttrDict
from logging import debug
from lib import helpers

plugin_folder = os.path.join(os.path.dirname(__file__), 'commands')
CONTEXT_SETTINGS = dict(auto_envvar_prefix='MUSICBOT')


class SubCommandLineInterface(click.MultiCommand):
    def list_commands(self, ctx):
        rv = []
        for filename in os.listdir(plugin_folder):
            if filename.endswith('.py'):
                rv.append(filename[:-3])
        rv.sort()
        return rv

    def get_command(self, ctx, name):
        ns = {}
        fn = os.path.join(plugin_folder, name + '.py')
        with open(fn) as f:
            code = compile(f.read(), fn, 'exec')
            eval(code, ns, ns)
        return ns['cli']


@click.command(cls=SubCommandLineInterface, context_settings=CONTEXT_SETTINGS)
@click.version_option("1.0")
@helpers.add_options(helpers.global_options)
@click.pass_context
def cli(ctx, verbosity, quiet, dry):
    """A complex command line interface."""
    ctx.obj = AttrDict
    helpers.config.verbosity = verbosity
    helpers.config.quiet = quiet
    helpers.config.dry = dry
    debug('main cli')
    ctx.obj.config = helpers.config
    debug(ctx)


if __name__ == '__main__':
    cli()
